name: release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: macos-latest, target: x86_64-apple-darwin }
          - { os: macos-latest, target: aarch64-apple-darwin }

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.job.target }}

      - name: Update clang
        if: startsWith(matrix.job.os, 'ubuntu')
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y clang 

      - name: Build with cargo
        shell: bash
        run: |
          cd rumina
          cargo build --release --target=${{ matrix.job.target }}

      - name: Package the project into a zip file
        id: package
        shell: bash
        run: |
          PKG_BASENAME="rumina-${{ needs.auto-tag.outputs.version }}-${{ matrix.job.target }}"
          PKG_NAME="${PKG_BASENAME}.zip"

          mkdir -p "${PKG_BASENAME}"
          find . -maxdepth 1 -type f -exec cp {} "${PKG_BASENAME}"/ \;

          cd "${PKG_BASENAME}"
          python3 -m venv python_env
          source python_env/bin/activate

          python -m pip install --upgrade pip
          pip install -r requirements.txt
          deactivate

          echo "#!/usr/bin/env/bash" > rumina
          echo "source python_env/bin/activate" >> rumina
          echo "python3 main.py \"\$@\"" >> rumina
          echo "deactivate" >> rumina
          chmod +x rumina

          cd ..

          mkdir -p "${PKG_BASENAME}/bin"
          mv rumina/target/${{ matrix.job.target }}/release/RUMINA "${PKG_BASENAME}/bin/"

          zip -r "${PKG_NAME}" "${PKG_BASENAME}"

          echo "ASSET=${PKG_NAME}" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.ASSET }}
